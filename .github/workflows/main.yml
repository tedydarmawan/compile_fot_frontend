name: Compile and Deploy To Server #nama untuk alur kerja (workflow) GitHub Actions ini. Nama ini hanya digunakan untuk memberikan label pada alur kerja dan tidak memengaruhi eksekusi alur kerja

on: 
  push:
    branches:
    - main
    #menentukan kapan alur kerja ini akan dijalankan. Dalam contoh ini, alur kerja akan dijalankan setiap kali ada push (penggantian kode) ke cabang (branch) "main" dalam repositori GitHub

jobs: # Di dalam blok ini, Anda mendefinisikan pekerjaan-pekerjaan yang akan dieksekusi dalam alur kerja.
  test-server: #Ini adalah nama pekerjaan yang akan dieksekusi
    permissions: write-all # parameter khusus yang digunakan dalam server
    environment: env-fe # pengaturan lingkungan khusus yang digunakan dalam alur kerja ini
    runs-on: ubuntu-latest # spesifikasi mesin yang akan digunakan
    steps: #Di bawah blok ini, Anda mendefinisikan langkah-langkah (steps) yang akan dieksekusi dalam pekerjaan. Setiap langkah adalah tugas tertentu yang akan dijalankan secara berurutan
    - name: Cek to Server #Ini adalah nama langkah, yang memberikan label pada langkah ini
      uses: appleboy/ssh-action@v0.1.7 # Ini adalah langkah yang menggunakan aksi (action) dari repository "appleboy/ssh-action" pada versi 0.1.7. Aksi ini digunakan untuk melakukan koneksi SSH ke server
      with: #Bagian ini mengkonfigurasi berbagai parameter yang diperlukan untuk koneksi SSH, seperti host, username, password, dan port
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: | #Ini adalah skrip yang akan dieksekusi pada server setelah koneksi SSH 
              whoami
              sudo su
              cd /var/www/html/
              ls
              cd /home/dev/1git/tedy/
              ls
              echo "Success Cek Server"
  compile:
    permissions: write-all
    environment: env-fe
    needs: [test-server] #Ini adalah bagian penting yang mengindikasikan bahwa pekerjaan "compile" membutuhkan pekerjaan sebelumnya dengan nama "test-server" untuk selesai terlebih dahulu sebelum dapat dijalankan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout #Langkah ini menggunakan aksi "actions/checkout@v3" untuk mengambil kode dari repositori GitHub ke mesin tempat pekerjaan ini berjalan
      uses: actions/checkout@v3
    - name: Use Node.js #Langkah ini menggunakan aksi "actions/setup-node@v3" untuk mengatur lingkungan Node.js dengan versi 12.x.
      uses: actions/setup-node@v3
      with:
        node-version: '12.x'
    - name: Cache node modules #Langkah ini digunakan untuk meng-cache modul Node.js agar tidak perlu diunduh ulang setiap kali pekerjaan dijalankan
      id: cache-npm
      uses: actions/cache@v3
      env:
       cache-name: cache-node-modules
      with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }} #Ini adalah kondisi yang memeriksa apakah cache modul Node.js ada. Jika cache tidak ada, maka langkah-langkah berikutnya akan dijalankan
      name: List the state of node modules
      continue-on-error: true
      run: npm list #menampilkan status modul Node.js yang diinstal
    - name: Install dependencies
      run: npm install
    - name: Build
      run: |
        npm run build-prod
    - name: Zip artifact for deployment #Langkah ini mengompres proyek yang telah dibangun menjadi sebuah arsip ZIP
      run: zip dist/tedy.zip ./dist/tedy/ -r
    - name: Copy Zip to Server #untuk menyalin arsip ZIP yang telah dibuat ke server yang ditentukan dengan menggunakan SCP (Secure Copy Protocol).
      uses: garygrossgarten/github-action-scp@release
      with:
        local: dist/tedy.zip
        remote: /home/dev/1git/tedy/frontend/tedy.zip
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}

  Deploy-to-server:
    permissions: write-all
    environment: env-fe
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.7
      with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
              whoami
              sudo su
              echo "Success Login Server"
              cd /home/dev/1git/tedy/frontend/
              ls
              unzip -o tedy.zip
              cp -r /home/dev/1git/tedy/frontend/dist/tedy/ /var/www/html/
              rm -rf /home/dev/1git/tedy/frontend/dist/tedy/
    - name: Send mail
      uses: dawidd6/action-send-mail@v3
      with:
          server_address: mail.logix.my.id
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended) mail server username:
          username: no-reply@logix.my.id
          # Optional (recommended) mail server password:
          password: Logix2021
          # Required mail subject:
          subject: ${{github.event.head_commit.message}} FRONTEND
          # Required recipients' addresses:
          to: andreseptian.ibn@gmail.com
          # Required sender full name (address can be skipped):
          from: FRONTEND-ANDRE # <user@example.com>
          # Optional plain body:
          body: ${{github.repository}} Compile and Running in Server Success!
          priority: high
